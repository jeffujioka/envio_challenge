#!/usr/bin/env bash

# based on: https://wiki.bash-hackers.org/howto/getopts_tutorial

# A POSIX variable
OPTIND=1         # Reset in case getopts has been used previously in the shell.

# Initialize our own variables:
gpio_y=""
gpio_x=""
verbose=0

usage() {
  echo "Show usage"
}

integer_regex='^[0-9]+$'

while getopts "h?vi:o:" opt;
do
  case "$opt" in
  h|\?)
    usage
    exit 0
    ;;
  v)
    verbose=1
    ;;
  i)
    if ! [[ $OPTARG =~ $integer_regex ]]; then
      echo "error: -i expects an integer value"; exit 1
    fi
    gpio_y=$OPTARG
    ;;
  o)
    if ! [[ $OPTARG =~ $integer_regex ]]; then
      echo "error: -o expects an integer value"; exit 1
    fi
    gpio_x=$OPTARG
    ;;
  *)
    usage
    exit 1
    ;;
  esac
done

# if ((OPTIND == 1)) || [ -z "$gpio_y" ] || [ -z "$gpio_x" ]; then
if ((OPTIND == 1)); then
  usage
  exit 1
fi

shift $((OPTIND-1))

if [ -z "$gpio_y" ] || [ -z "$gpio_x" ]; then
  usage
  exit 1
fi

[ "${1:-}" = "--" ] && shift

GPIO_BASE_PATH="/tmp/sys/class/gpio"

gpio_export() {
  if [  -n "$verbose" ]; then
    echo "$1 > $GPIO_BASE_PATH/exports"
  fi
  echo $1 > $GPIO_BASE_PATH/exports
}

gpio_set_direction() {
  if [  -n "$verbose" ]; then
    echo "$2 > $GPIO_BASE_PATH/gpio$1/direction"
  fi
  echo $2 > $GPIO_BASE_PATH/gpio$1/direction
}

gpio_set_value() {
  if [  -n "$verbose" ]; then
    echo "$2 > $GPIO_BASE_PATH/gpio$1/value"
  fi
  echo $2 > $GPIO_BASE_PATH/gpio$1/value
}

gpio_get_value() {
  if [  -n "$verbose" ]; then
    echo "cat $GPIO_BASE_PATH/gpio$1/value"
  fi
  ret_val=$(< $GPIO_BASE_PATH/gpio$1/value)
}

gpio_export $gpio_y
gpio_export $gpio_x

gpio_set_direction $gpio_y 'in'
gpio_set_direction $gpio_x 'out'

toggle_value=0
while true; do
  gpio_get_value $gpio_y # reading the value of gpio Y

  if [[ $ret_val == 1 ]]; then
    case $toggle_value in
      1) toggle_value=0 ;;
      *) toggle_value=1 ;;
    esac
    gpio_set_value $gpio_x $toggle_value
    sleep 1
  else
    toggle_value=0
    gpio_set_value $gpio_x 0
    sleep 0.1
  fi
done
